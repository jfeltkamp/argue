<?php

/**
 * @file
 * Contains argue_user.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\userpoints\Service\UserPointsServiceInterface;

/**
 * Implements hook_help().
 */
function argue_user_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the argue_user module.
    case 'help.page.argue_user':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Customize user UI for Argue.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function argue_user_theme() {
  return [
    'argue_user_address' => [
      'variables' => [
        'header' => NULL,
        'content' => NULL,
      ],
    ],
  ];
}


/**
 * Implements hook_entity_insert().
 */
function argue_user_entity_insert(EntityInterface $entity) {
  $plugin_key = "{$entity->getEntityTypeId()}__{$entity->bundle()}";
  \Drupal::service('plugin.manager.argue_user_points')->assignPoints($plugin_key, 'create', $entity);
}

/**
 * Implements hook_entity_update().
 */
function argue_user_entity_update(EntityInterface $entity) {
  $plugin_key = "{$entity->getEntityTypeId()}__{$entity->bundle()}";
  \Drupal::service('plugin.manager.argue_user_points')->assignPoints($plugin_key, 'update', $entity);
}

/**
 * Implements hook_entity_update().
 */
function argue_user_entity_delete(EntityInterface $entity) {
  $plugin_key = "{$entity->getEntityTypeId()}__{$entity->bundle()}";
  \Drupal::service('plugin.manager.argue_user_points')->assignPoints($plugin_key, 'delete', $entity);
}
